<!DOCTYPE html>
<% provide(:title, "Ruby") %>

<style>
  .sidenav {
    width: 130px;
    height: 100vw;
    position: fixed;
    z-index: 1;
    top: 150px;
    left: 10px;
    background: #333;
    overflow-x: hidden;
    padding: 8px 0;
  }
  
  .sidenav a {
    padding: 6px 8px 6px 16px;
    text-decoration: none;
    font-size: 25px;
    color: #f2f2f2;
    display: block;
  }
  
  .sidenav a:hover {
    background-color: #ddd;
    color: black;
  }
  
  .main {
    margin-left: 140px; 
    margin-top: 80px;
    font-size: 28px; 
    padding: 0px 10px;
  }
  
  .mainbody {
    margin-left: 140px;
    margin-top: 45px;
    max-width: 1000px;
    font-size: 20px;
    padding: 0px 10px;
  }
  
  @media screen and (max-height: 450px) {
    .sidenav {padding-top: 15px;}
    .sidenav a {font-size: 18px;}
  }
</style>


<div class="sidenav">
  <a href="<%= static_pages_work_url %>">About</a>
  <a href="<%= static_pages_ruby_url %>">Ruby</a>
  <a href="<%= static_pages_lua_url %>">Lua</a>
  <a href="<%= static_pages_glsl_url %>">GLSL</a>
</div>

<div class="main">
  <h3>Ruby + Rails</h3>
</div>

<div class="mainbody">
  <h3>This Site</h3>
  <a>2021</a>
  <a href="https://www.github.com/jmackellar/RailsHelloWorld">Github</a></br>
  <a>This website was built as an exercise in learning Rails development.</a>
  <h3>Procedural BSP Generation</h3>
  <a>2021</a>
  <a href="https://www.github.com/jmackellar/RubyBSP">Github</a></br>
  <a href="https://raw.githubusercontent.com/jmackellar/RubyBSP/main/output1.txt">Example 1</a>
  <a href="https://raw.githubusercontent.com/jmackellar/RubyBSP/main/output2.txt">Example 2</a>
  <a href="https://raw.githubusercontent.com/jmackellar/RubyBSP/main/output3.txt">Example 3</a></br>
  <a>This algorothim uses a BSP Tree to seperate a flat plane into rooms connected through their relationship on the tree.
  The contents of the generated planes are saved to a file in the working folder.  
  Size of the plane and N subdivisions to make on the tree are configurable.</a>
  <h3>Asynchronous Event Bus</h3>
  <a>2021</a>
  <a href="https://www.github.com/jmackellar/RubyEventBus">Github</a></br>
  <a href="https://github.com/jmackellar/RubyEventBus/blob/main/output.txt">Example</a></br>
  <a>A simple event bus that allows entities to communicated asynchronously by publishing and subscribing to various user defined channels.
  The application comes with an example usage of a catalog and shopping cart communicating prices between each other.</a>
</div>